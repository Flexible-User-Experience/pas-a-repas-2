const loadScript=Symbol("loadScript"),instance=Symbol("instance");let _instance;class GoogleChartsManager{get[instance](){return _instance}set[instance](t){_instance=t}constructor(){if(this[instance])return this[instance];this[instance]=this}reset(){_instance=null}[loadScript](){return this.scriptPromise||(this.scriptPromise=new Promise((t=>{const a=document.getElementsByTagName("body")[0],e=document.createElement("script");e.type="text/javascript",e.onload=function(){GoogleCharts.api=window.google,GoogleCharts.api.charts.load("current",{packages:["corechart","table"]}),GoogleCharts.api.charts.setOnLoadCallback((()=>{t()}))},e.src="https://www.gstatic.com/charts/loader.js",a.appendChild(e)}))),this.scriptPromise}load(t,a){return this[loadScript]().then((()=>{if(a){let e={};e=a instanceof Object?a:Array.isArray(a)?{packages:a}:{packages:[a]},this.api.charts.load("current",e),this.api.charts.setOnLoadCallback(t)}else{if("function"!=typeof t)throw"callback must be a function";t()}}))}}const GoogleCharts=new GoogleChartsManager;export default GoogleChartsManager;export{GoogleCharts};