{% extends "Admin/edit.html.twig" %}

{# override actions bottom bar #}
{% block sonata_form_actions %}
    {{ parent() }}
    {# batch edit button #}
    {% if object.next is not null %}
        <div class="btn-group" role="group">
            <a class="btn btn-info" href="{{ admin.generateObjectUrl('batchedit', object) }}"><i class="fa fa-clock-o" aria-hidden="true"></i> {{ 'backend.admin.event.button.special_timelapse_update' | trans }}</a>
        </div>
    {% endif %}
    {# batch delete button #}
    {% if object.id is not null %}
        <div class="btn-group" role="group">
            <a href="{{ admin.generateObjectUrl('batchdelete', object) }}" class="btn btn-danger edit_link"><i class="fa fa-trash"></i> {{ 'backend.admin.event.batch_delete.button' | trans }}</a>
        </div>
    {% endif %}
    {# timelapse buttons section #}
    {% include "Admin/Event/timelapse_buttons_section.html.twig" with {mode: 'edit'} %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        jQuery(document).ready(function() {
            let emptyPanelBoxNode = jQuery('div.sonata-ba-collapsed-fields em').parent();
            if (emptyPanelBoxNode) {
                emptyPanelBoxNode.html('<div data-controller="events-student-assistance" data-events-student-assistance-eid-value="{{ object.id }}" data-action="app-student-added@window->events-student-assistance#studentAdded app-student-removed@window->events-student-assistance#studentRemoved"></div>');
                let studentsMultiSelectNode = jQuery('#{{ form.vars.id ~ '_students' }}');
                studentsMultiSelectNode.on('change', function(event) {
                    if (event.hasOwnProperty('added')) {
                        console.log('app-student-added', event.added);
                        const trigger = new CustomEvent('app-student-added', {detail: {event: '{{ object.id }}', student: event.added.id, text: event.added.text, element: event.added.element[0]}});
                        window.dispatchEvent(trigger);
                    }
                    if (event.hasOwnProperty('removed')) {
                        console.log('app-student-removed', event.removed);
                        const trigger = new CustomEvent('app-student-removed', {detail: {event: '{{ object.id }}', student: event.removed.id, text: event.removed.text, element: event.removed.element[0]}});
                        window.dispatchEvent(trigger);
                    }
                });
            }
        });
    </script>
{% endblock %}
